min(pitchfork$release_year, na.rm = TRUE)
histogram1 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color="black", fill="white", binwidth = 0.1) +
geom_density(alpha=.2, fill="#FF6666") +
labs(title = "Pitchfork Score Distribution", x = "Score", y ="Frequency") +
theme_bw()
histogram1
histogram2 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="7.9"|score == "7.1"),"Underindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "red")) +
labs(title = "Pitchfork Score Distribution: Underindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram2
histogram3 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="8"|score == "7"), "Overindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "seagreen")) +
labs(title = "Pitchfork Score Distribution: Overindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram3
histogram4 <- plot_grid(histogram2, histogram3, ncol = 1)
histogram4
pitchfork_grouped <- pitchfork %>% group_by(label) %>% summarize(score = mean(score))
histogram5 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color = "black", fill="white", binwidth = 0.1) +
geom_vline(aes(xintercept = mean(score)),col='red', linetype = "dashed")+
geom_vline(data = pitchfork_grouped, mapping =aes(xintercept = score),col='blue', linetype = "dashed") +
facet_wrap(label ~ ., ncol = 5) +
theme_bw() +
labs(title = "Pitchfork Score Distribution by Genre", x = "Score", y ="Frequency")
histogram5
hchart(density(pitchfork$score), type = "area", color = "#B71C1C", name = "Score")
hchart(pitchfork$score, type = "area", color = "#111111", name = "Score")
pitchfork_year <- function(inputyear){
pitchfork %>% filter(release_year %in% inputyear[1]:inputyear[2])
}
pitchfork_year(c(2015,2019))
pitchfork %>% filter(score <= 0.1) %>% select(artist, album, link)
lowest_scores <- pitchfork %>% group_by(release_year) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% filter(release_year >= 1995) %>% arrange(desc(release_year)) %>% select(artist, album, score, date, release_year, link)
lowest_scores <- pitchfork %>% group_by(year(date)) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% arrange(desc(date)) %>% select(artist, album, score, date, release_year, link)
print(lowest_scores, n=30)
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
} else {
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
} else {
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
} else {
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
}
setwd("C:/Users/Emman/Dropbox/UNC Biostatistics/BIOS 611/bios-611-project")
library(tidyverse)
library(stringr)
library(lubridate)
library(highcharter)
library(dplyr)
library(ggplot2)
library(grid)
library(cowplot)
pitchfork = read.csv("derived_data/pitchfork_clean.csv", header = TRUE)
pitchfork = as_tibble(pitchfork) %>% group_by(simplified_genre) %>%
mutate(label = paste0(simplified_genre, "\n", round(mean(score),2)))
pitchfork %>% select(score) %>% summarize(median(score))
pitchfork %>% select(score) %>% summarize(mean(score))
best_new_music <- pitchfork %>% filter(bnm == 1)
length(best_new_music)
min(pitchfork$release_year, na.rm = TRUE)
histogram1 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color="black", fill="white", binwidth = 0.1) +
geom_density(alpha=.2, fill="#FF6666") +
labs(title = "Pitchfork Score Distribution", x = "Score", y ="Frequency") +
theme_bw()
histogram1
histogram2 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="7.9"|score == "7.1"),"Underindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "red")) +
labs(title = "Pitchfork Score Distribution: Underindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram2
histogram3 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="8"|score == "7"), "Overindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "seagreen")) +
labs(title = "Pitchfork Score Distribution: Overindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram3
histogram4 <- plot_grid(histogram2, histogram3, ncol = 1)
histogram4
pitchfork_grouped <- pitchfork %>% group_by(label) %>% summarize(score = mean(score))
histogram5 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color = "black", fill="white", binwidth = 0.1) +
geom_vline(aes(xintercept = mean(score)),col='red', linetype = "dashed")+
geom_vline(data = pitchfork_grouped, mapping =aes(xintercept = score),col='blue', linetype = "dashed") +
facet_wrap(label ~ ., ncol = 5) +
theme_bw() +
labs(title = "Pitchfork Score Distribution by Genre", x = "Score", y ="Frequency")
histogram5
hchart(density(pitchfork$score), type = "area", color = "#B71C1C", name = "Score")
hchart(pitchfork$score, type = "area", color = "#111111", name = "Score")
pitchfork_year <- function(inputyear){
pitchfork %>% filter(release_year %in% inputyear[1]:inputyear[2])
}
pitchfork_year(c(2015,2019))
pitchfork %>% filter(score <= 0.1) %>% select(artist, album, link)
lowest_scores <- pitchfork %>% group_by(release_year) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% filter(release_year >= 1995) %>% arrange(desc(release_year)) %>% select(artist, album, score, date, release_year, link)
lowest_scores <- pitchfork %>% group_by(year(date)) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% arrange(desc(date)) %>% select(artist, album, score, date, release_year, link)
print(lowest_scores, n=30)
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
} else {
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
} else {
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
} else {
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
}
histogram2 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="7.9"|score == "7.1"|score=="9.9"),"Underindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "red")) +
labs(title = "Pitchfork Score Distribution: Underindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram2
histogram3 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="8"|score == "7"|score == "10"), "Overindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "seagreen")) +
labs(title = "Pitchfork Score Distribution: Overindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram3
histogram4 <- plot_grid(histogram2, histogram3, ncol = 1)
histogram4
pitchfork_grouped <- pitchfork %>% group_by(label) %>% summarize(score = mean(score))
histogram5 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color = "black", fill="white", binwidth = 0.1) +
geom_vline(aes(xintercept = mean(score)),col='red', linetype = "dashed")+
geom_vline(data = pitchfork_grouped, mapping =aes(xintercept = score),col='blue', linetype = "dashed") +
facet_wrap(label ~ ., ncol = 5) +
theme_bw() +
labs(title = "Pitchfork Score Distribution by Genre", x = "Score", y ="Frequency")
histogram5
hchart(density(pitchfork$score), type = "area", color = "#B71C1C", name = "Score")
hchart(pitchfork$score, type = "area", color = "#111111", name = "Score")
pitchfork_year <- function(inputyear){
pitchfork %>% filter(release_year %in% inputyear[1]:inputyear[2])
}
pitchfork_year(c(2015,2019))
pitchfork %>% filter(score <= 0.1) %>% select(artist, album, link)
lowest_scores <- pitchfork %>% group_by(release_year) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% filter(release_year >= 1995) %>% arrange(desc(release_year)) %>% select(artist, album, score, date, release_year, link)
lowest_scores <- pitchfork %>% group_by(year(date)) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% arrange(desc(date)) %>% select(artist, album, score, date, release_year, link)
print(lowest_scores, n=30)
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
} else {
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
} else {
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
} else {
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
}
pitchfork %>% filter(score == 9.9) %>% select(artist, album, link)
pitchfork %>% filter(score == 10) %>% select(artist, album, link)
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme(legend, position = "none")
library(tidyverse)
library(stringr)
library(lubridate)
library(highcharter)
library(dplyr)
pitchfork <- read.csv("derived_data/pitchfork_clean.csv", header = TRUE)
pitchfork <- as_tibble(pitchfork)
top_albums <- read.csv("source_data/riaaAlbumCerts_1999-2019.csv", header = TRUE)
top_albums <- as_tibble(top_albums) %>% mutate(Status_standard = sub('.* ', '', Status))
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+"," ")
s <- str_replace_all(s," ","")
s
}
pitchfork <- pitchfork %>% mutate(key = paste0(simplify_strings(album),";",simplify_strings(artist)))
top_albums <- top_albums %>% mutate(key = paste0(simplify_strings(Album),";",simplify_strings(Artist)))
pitchfork_avg_scores <- pitchfork %>% group_by(release_year) %>%
summarize(avg_score_pitchfork = mean(score), pitchfork_albums_reviewed = n())
avg_top_album_scores <- top_albums %>%
#  filter(Status_standard == "Platinum") %>%
inner_join(pitchfork, by = "key") %>%
group_by(release_year) %>%
summarize(avg_score_top_album = mean(score), albums_reviewed = n()) %>%
inner_join(pitchfork_avg_scores, by = "release_year") %>%
filter(release_year >= 1999) %>%
mutate(favorable = ifelse(avg_score_pitchfork - avg_score_top_album > 0, "Unfavorable", "Favorable"))
contrarian_index <- ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme(legend, position = "none")
contrarian_index
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme(legend, position = "none")
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score")
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme(legend.position = "none")
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme(legend.position = "none") +
theme_bw()
ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme_bw() +
theme(legend.position = "none")
library(tidyverse)
library(stringr)
library(lubridate)
library(highcharter)
library(dplyr)
pitchfork <- read.csv("derived_data/pitchfork_clean.csv", header = TRUE)
pitchfork <- as_tibble(pitchfork)
top_albums <- read.csv("source_data/riaaAlbumCerts_1999-2019.csv", header = TRUE)
top_albums <- as_tibble(top_albums) %>% mutate(Status_standard = sub('.* ', '', Status))
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+"," ")
s <- str_replace_all(s," ","")
s
}
pitchfork <- pitchfork %>% mutate(key = paste0(simplify_strings(album),";",simplify_strings(artist)))
top_albums <- top_albums %>% mutate(key = paste0(simplify_strings(Album),";",simplify_strings(Artist)))
pitchfork_avg_scores <- pitchfork %>% group_by(release_year) %>%
summarize(avg_score_pitchfork = mean(score), pitchfork_albums_reviewed = n())
avg_top_album_scores <- top_albums %>%
#  filter(Status_standard == "Platinum") %>%
inner_join(pitchfork, by = "key") %>%
group_by(release_year) %>%
summarize(avg_score_top_album = mean(score), albums_reviewed = n()) %>%
inner_join(pitchfork_avg_scores, by = "release_year") %>%
filter(release_year >= 1999) %>%
mutate(favorable = ifelse(avg_score_pitchfork - avg_score_top_album > 0, "Unfavorable", "Favorable"))
contrarian_index <- ggplot(avg_top_album_scores, aes(x = release_year, y = avg_score_top_album, group = 1)) +
geom_line(size = 1) +
geom_point(size = 2) +
geom_line(aes(x = release_year, y = avg_score_pitchfork, color = "red"), size = 1) +
geom_point(aes(x = release_year, y = avg_score_pitchfork, color = "red")) +
#  geom_ribbon(data = avg_top_album_scores[avg_top_album_scores$avg_score_top_album >= avg_top_album_scores$avg_score_pitchfork,],
#              aes(x = release_year, ymin=avg_score_top_album, ymax=avg_score_pitchfork), fill = "red", alpha=0.5) +
xlim(1998, 2020) +
labs(title = "Pitchfork Average Score Assigned to Popular Albums vs. All Albums",
x = "Release Year", y ="Average Score") +
theme_bw() +
theme(legend.position = "none")
top_albums %>%
inner_join(pitchfork, by = "key") %>%
filter(release_year == 2000) %>%
select(artist, album, score, release_year)
contrarian_index2 <- ggplot(avg_top_album_scores, aes(x=avg_score_pitchfork, xend=avg_score_top_album,
y=release_year, yend=release_year, color=favorable)) +
theme_bw() +
geom_segment(size = 6) +
scale_color_manual(values = c('seagreen', 'firebrick')) +
labs(title = "Difference Between Average Pitchfork Scores and Pitchfork Scores of Popular Albums",
x = "Difference Between Average Score on All Albums and Average Score of Popular Albums ", y ="Average Score") +
geom_label(aes(label=round(avg_score_pitchfork,2),
x=ifelse(favorable == "Favorable", avg_score_pitchfork - .1, avg_score_pitchfork + .1)),
size = 4) +
geom_label(aes(label=round(avg_score_top_album,2),
x=ifelse(favorable == "Favorable", avg_score_top_album + .1, avg_score_top_album - .1)),
size=4) +
scale_y_continuous(breaks = seq(1999, 2018, by = 1),1)
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/contrarian_index.png",
width = 10, height = 5,
plot = contrarian_index)
} else {
ggsave("figures/contrarian_index.png",
width = 10, height = 5,
plot = contrarian_index)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/contrarian_index_bar.png",
width = 10, height = 5,
plot = contrarian_index2)
} else {
ggsave("figures/contrarian_index_bar.png",
width = 10, height = 5,
plot = contrarian_index2)
}
pitchfork %>% select(score) %>% summarize(n())
pitchfork %>% select(score) %>% filter(simplified_genre == "") %>% summarize(n())
library(tidyverse)
library(stringr)
library(lubridate)
library(highcharter)
library(dplyr)
library(ggplot2)
library(grid)
library(cowplot)
pitchfork = read.csv("derived_data/pitchfork_clean.csv", header = TRUE)
pitchfork = as_tibble(pitchfork) %>% group_by(simplified_genre) %>%
mutate(label = paste0(simplified_genre, "\n", round(mean(score),2)))
pitchfork %>% select(score) %>% summarize(median(score))
pitchfork %>% select(score) %>% summarize(mean(score))
best_new_music <- pitchfork %>% filter(bnm == 1)
length(best_new_music)
min(pitchfork$release_year, na.rm = TRUE)
histogram1 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color="black", fill="white", binwidth = 0.1) +
geom_density(alpha=.2, fill="#FF6666") +
labs(title = "Pitchfork Score Distribution", x = "Score", y ="Frequency") +
theme_bw()
histogram1
histogram2 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="7.9"|score == "7.1"|score=="9.9"),"Underindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "red")) +
labs(title = "Pitchfork Score Distribution: Underindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram2
histogram3 <- ggplot(pitchfork, aes(x = score,
fill = factor(ifelse((score =="8"|score == "7"|score == "10"), "Overindexed", "Other")))) +
geom_histogram(color="black", binwidth = 0.1) +
scale_fill_manual(name = "score", values=c("grey80", "seagreen")) +
labs(title = "Pitchfork Score Distribution: Overindexed Scores", x = "Score", y ="Frequency") +
theme_bw()
histogram3
histogram4 <- plot_grid(histogram2, histogram3, ncol = 1)
histogram4
pitchfork_grouped <- pitchfork %>% group_by(label) %>% summarize(score = mean(score))
histogram5 <- ggplot(pitchfork, aes(x = score)) +
geom_histogram(aes(y = ..density..), color = "black", fill="white", binwidth = 0.1) +
geom_vline(aes(xintercept = mean(score)),col='red', linetype = "dashed")+
geom_vline(data = pitchfork_grouped, mapping =aes(xintercept = score),col='blue', linetype = "dashed") +
facet_wrap(label ~ ., ncol = 5) +
theme_bw() +
labs(title = "Pitchfork Score Distribution by Genre", x = "Score", y ="Frequency")
histogram5
hchart(density(pitchfork$score), type = "area", color = "#B71C1C", name = "Score")
hchart(pitchfork$score, type = "area", color = "#111111", name = "Score")
pitchfork_year <- function(inputyear){
pitchfork %>% filter(release_year %in% inputyear[1]:inputyear[2])
}
pitchfork_year(c(2015,2019))
pitchfork %>% filter(score <= 0.1) %>% select(artist, album, link)
lowest_scores <- pitchfork %>% group_by(release_year) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% filter(release_year >= 1995) %>% arrange(desc(release_year)) %>% select(artist, album, score, date, release_year, link)
lowest_scores <- pitchfork %>% group_by(year(date)) %>% mutate(lowest_score = min(score)) %>%
filter(score == lowest_score) %>% arrange(desc(date)) %>% select(artist, album, score, date, release_year, link)
print(lowest_scores, n=30)
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
} else {
ggsave("figures/score_distribution.png",
width = 10, height = 5,
plot = histogram1)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
} else {
ggsave("figures/underoverindexing.png",
width = 10, height = 5,
plot = histogram4)
}
if (!dir.exists("figures")){
dir.create("figures")
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
} else {
ggsave("figures/score_dist_by_genre.png",
width = 10, height = 5,
plot = histogram5)
}
pitchfork %>% select(score) %>% filter(simplified_genre == "") %>% summarize(n())
pitchfork %>% select(score) %>% summarize(n())
pitchfork %>% ungroup() %>% select(score) %>% summarize(n())
