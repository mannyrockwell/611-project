s <- function(x){
return(ifelse(x>=0 & x <=1.70, 0.09,
ifelse(x>=1.70 & x <= 3, -x+1.70+0.09,0)))
}
p = function(x){
return(x - 1.549)
}
r = function(x){
return(p(x)+q(x)+s(x))
}
ggplot(data.frame(x=c(1, 2)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Coffee Price", y="Profit") +
ggtitle("Question 3 (a)(iii) - Coffee Collar") +
scale_colour_identity("Function", guide="legend",
labels = c("Total Position","Unhedged Position","Short 1.70 Call","Long 1.60 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=22.62, 1.6799*x,
ifelse(x>=22.62 & x <= 28.86, 38,
ifelse(x >= 28.86 & x<=100, 1.3167*x, 0))))}
q = function(x){
return(42)
}
r = function(x){
return(p(x)+q(x))
}
ggplot(data.frame(x=c(20, 35)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Average Stock Closing Price", y="Payoff to Shareholders") +
ggtitle("Question 2") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Stock", "Cash")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x){
return(x-35)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Short 2-40 Puts", "Long 45 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x){
return(x-35)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=t, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Short 2-40 Puts", "Long 45 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x){
return(x)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=t, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Short 2-40 Puts", "Long 45 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x-35){
return(x)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=t, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Short 2-40 Puts", "Long 45 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x){
return(x-35)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=t, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Short 2-40 Puts", "Long 45 Put")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=35, 35-x,
ifelse(x>=35 & x <= 60, 0,0)))
}
q = function(x){
return(ifelse(x>=0 & x <=40, 0,
ifelse(x>=40 & x <= 60, 2*(40-x),0)))
}
s <- function(x){
return(ifelse(x>=0 & x <=45, 0,
ifelse(x>=45 & x <= 60, x-45,0)))
}
t <- function(x){
return(x-35)
}
r = function(x){
return(p(x)+q(x)+s(x)+t(x))
}
ggplot(data.frame(x=c(25, 55)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="green4"), stat="function", fun=s, size = 2, linetype = 1) +
geom_path(aes(colour="purple"), stat="function", fun=t, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.18 (c)") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 35 Put", "Long 45 Call", "Index","Short 2-40 Calls")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=950, -x+950,
ifelse(x>=950 & x <= 1500, 0,0)))}
q = function(x){
return(x)
}
r = function(x){
return(p(x)+q(x))
}
ggplot(data.frame(x=c(800, 1200)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.3") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 950 Put", "Long Index")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=950, 0,
ifelse(x>=950 & x <= 1500, x-950,0)))}
q = function(x){
return(950)
}
r = function(x){
return(p(x)+q(x))
}
ggplot(data.frame(x=c(800, 1200)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.3") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 950 Put", "Long Index")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
p <- function(x){
return(ifelse(x>=0 & x <=950, 0,
ifelse(x>=950 & x <= 1500, x-950,0)))}
q = function(x){
return(950)
}
r = function(x){
return(p(x)+q(x))
}
ggplot(data.frame(x=c(800, 1200)), aes(x=x)) +
geom_path(aes(colour="blue"), stat="function", fun=p, size = 2, linetype = 1) +
geom_path(aes(colour="red"), stat="function", fun=q, size = 2, linetype = 1) +
geom_path(aes(colour="black"), stat="function", fun=r, size = 2, linetype = 1) +
theme_bw() +
labs(x="Stock Closing Price", y="Payoff") +
ggtitle("Question 3.3") +
scale_colour_identity("Function", guide="legend",
labels = c("Total","Long 950 Put", "Bond")) +
theme(legend.text=element_text(size = 8.5)) +
theme(plot.title=element_text(size=15, face="bold")) +
theme(axis.title.x=element_text(face="bold", size=9.5)) +
theme(axis.title.y=element_text(face = "bold", size=9.5)) +
theme(plot.title = element_text(hjust = 0.5))
2^5-2
3^5-3
4^5-4
rev("hello")
rev(strsplit("hello"))
count = 0
strReverse <- function(x){
sapply(lapply(strsplit(x, NULL), rev), paste, collapse="")}
rev(strsplit("hello"))
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
print(val)
#if(100-i == i)
}
count = 0
strReverse <- function(x){
sapply(lapply(strsplit(x, NULL), rev), paste, collapse="")}
rev(strsplit("hello"))
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(100-i == val){
count=count+1
print(val,i)
}
}
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(100-i == val){
count=count+1
print(val,i)
}
}
count
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(i == val){
count=count+1
print(val,i)
}
}
count = 0
strReverse <- function(x){
sapply(lapply(strsplit(x, NULL), rev), paste, collapse="")}
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(i == val){
count=count+1
print(val)
}
}
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(100-i == val){
count=count+1
print(val)
}
}
i
paste(100,"-", 3)
count = 0
strReverse <- function(x){
sapply(lapply(strsplit(x, NULL), rev), paste, collapse="")}
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(100-i == val){
count=count+1
}
print(paste(100-i,"-", val))
}
for (i in 1:100){
val = as.integer(strReverse(as.character(i)))
if(100-i == val){
count=count+1
}
print(paste(100-i,"-", i))
}
1500*(1/3)
2500/500
2500/875
df = read.csv("EPID 600/lab1-codebook.csv", header= TRUE)
head(df)
sum(df$NIGHTSHIFT)
df %>% count(i..ID)
library(tidyverse)
library(dplyr)
df = read.csv("EPID 600/lab1-codebook.csv", header= TRUE)
head(df)
sum(df$NIGHTSHIFT)
df %>% count(i..ID)
R()
install.packages(c("Amelia", "backports", "bit", "bit64", "bitops", "broom", "callr", "cli", "colorspace", "curl", "data.table", "diffobj", "digest", "dplyr", "ellipsis", "fansi", "farver", "fs", "ggplot2", "glue", "gtools", "haven", "htmltools", "httpuv", "igraph", "isoband", "jsonlite", "later", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "multcomp", "openssl", "party", "pkgload", "plyr", "processx", "promises", "ps", "purrr", "rappdirs", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reshape2", "rgl", "rlang", "scales", "stringi", "strucchange", "sys", "testthat", "tibble", "tidyr", "tidyselect", "utf8", "uuid", "vctrs", "xml2", "yaml", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages(c("htmltools", "stringi", "tibble"))
install.packages(c("htmltools", "stringi", "tibble"))
install.packages(c("htmltools", "stringi", "tibble"))
install.packages(c("htmltools", "stringi", "tibble"))
install.packages(c("htmltools", "stringi", "tibble"))
install.packages("htmltools")
head(pitchfork)
library(tidyverse)
pitchfork = read.csv("pitchfork.csv", header = TRUE)
pitchfork = as_tibble(pitchfork)
str(pitchfork)
score_dist <- pitchfork %>% select(score)
hist(score_dist$score)
setwd("C:/Users/Emman/Dropbox/UNC Biostatistics/BIOS 611")
setwd("C:/Users/Emman/Dropbox/UNC Biostatistics/BIOS 611/bios-611-project")
library(tidyverse)
pitchfork = read.csv("pitchfork.csv", header = TRUE)
pitchfork = as_tibble(pitchfork)
str(pitchfork)
score_dist <- pitchfork %>% select(score)
hist(score_dist$score)
avg_score_by_label = select(pitchfork, label, score) %>%
group_by(label) %>%
summarise(avg_score = mean(score), count = n()) %>%
arrange(desc(avg_score)) %>%
filter(count > 4)
plot(avg_score_by_label)
head(pitchfork)
review_freq <- pitchfork %>% filter(release_year = 2019) %>% select(review)
review_freq <- pitchfork %>% filter(release_year == 2019) %>% select(review)
review_freq
head(pitchfork)
review_freq <- pitchfork %>% filter(release_year == 2018) %>% select(review)
review_freq
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+","_")
s
}
simplify_strings(review_freq)
review_freq <- pitchfork %>% filter(release_year == 2019) %>% select(review)
words <- review_freq %>% simplify_strings() %>% strsplit("_")
words
word_df <- words %>% table() %>% sort()
word_df
word_df <- words %>% group_by() %>% tally()
head(word_df)
word_df <- words %>% group_by() %>% tally() %>% sort(decreasing = TRUE)
head(word_df)
word_df <- words %>% enframe()
library(tidyverse)
head(word_df)
word_df <- words %>% as.dataframe
word_df <- words %>% as.data.frame()
head(word_df)
word_df <- words %>% as_tibble_col(column_names = "words") %>% group_by() %>% tally() %>% sort(decreasing = TRUE)
head(word_df)
library(tidyverse)
pitchfork = read.csv("pitchfork.csv", header = TRUE)
pitchfork = as_tibble(pitchfork)
str(pitchfork)
score_dist <- pitchfork %>% select(score)
hist(score_dist$score)
avg_score_by_label = select(pitchfork, label, score) %>%
group_by(label) %>%
summarise(avg_score = mean(score), count = n()) %>%
arrange(desc(avg_score)) %>%
filter(count > 4)
head(word_df)
plot(avg_score_by_label)
review_freq <- pitchfork %>% filter(release_year == 2019) %>% select(review)
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+"," ")
s
}
words <- review_freq %>% simplify_strings() %>% strsplit(" ")
word_df <- words %>% as_tibble()
colnames(words_df) <- "words"
colnames(word_df) <- "words"
word_df <- words %>% as_tibble(colnames<- "words")
head(word_df)
word_df <- words %>% as_tibble(colnames<- "words") %>% group_by(words) %>% tally() %>% sort(decreasing = TRUE)
head(word_df)
word_df <- words %>% as_tibble(colnames<- c("words")
word_df <- words %>% as_tibble(colnames<- c("words"))
word_df <- words %>% as_tibble(colnames<- c("words"))
head_(pitchfork)
head(pitchfork)
best_new_music <- pitchfork %>% filter(bnm == 1)
len(best_new_music)
length(best_new_music)
best_new_music
head(best_new_music$link)
